using UnityEngine;
using UnityEngine.Networking;
using System.Collections;

public class GitHubImageDisplay : MonoBehaviour
{
    // GitHubに保存された画像のURL
    public string imageUrl = "https://github.com/username/repository/raw/main/captured_image.jpg"; // 必要に応じてURLを変更
    public Renderer targetRenderer; // 画像を表示する対象のRenderer（例えば、Quadにアタッチされたもの）

    // スタート時に画像をダウンロードして表示
    void Start()
    {
        // 画像をダウンロードして表示するコルーチンを開始
        StartCoroutine(DownloadImage());
    }

    // GitHubから画像をダウンロードして表示するコルーチン
    IEnumerator DownloadImage()
    {
        using (UnityWebRequest www = UnityWebRequestTexture.GetTexture(imageUrl))
        {
            // GitHubから画像をダウンロード
            yield return www.SendWebRequest();

            // ダウンロード結果のチェック
            if (www.result == UnityWebRequest.Result.Success)
            {
                // ダウンロードした画像をTexture2Dとして取得
                Texture2D texture = ((DownloadHandlerTexture)www.downloadHandler).texture;

                // Rendererが設定されていて、画像が正常にダウンロードされていれば表示
                if (targetRenderer != null && texture != null)
                {
                    targetRenderer.material.mainTexture = texture;
                    Debug.Log("画像を表示しました！");
                }
                else
                {
                    Debug.LogError("Rendererがnull、または画像がnullです。");
                }
            }
            else
            {
                // ダウンロードに失敗した場合
                Debug.LogError("画像のダウンロードに失敗しました: " + www.error);
            }
        }
    }
}
